;; Auto-generated. Do not edit!


(when (boundp 'general_service_2022::Goals_name)
  (if (not (find-package "GENERAL_SERVICE_2022"))
    (make-package "GENERAL_SERVICE_2022"))
  (shadow 'Goals_name (find-package "GENERAL_SERVICE_2022")))
(unless (find-package "GENERAL_SERVICE_2022::GOALS_NAME")
  (make-package "GENERAL_SERVICE_2022::GOALS_NAME"))

(in-package "ROS")
;;//! \htmlinclude Goals_name.msg.html
(if (not (find-package "MOVE_BASE_MSGS"))
  (ros::roseus-add-msgs "move_base_msgs"))


(defclass general_service_2022::Goals_name
  :super ros::object
  :slots (_name _goal ))

(defmethod general_service_2022::Goals_name
  (:init
   (&key
    ((:name __name) "")
    ((:goal __goal) (instance move_base_msgs::MoveBaseGoal :init))
    )
   (send-super :init)
   (setq _name (string __name))
   (setq _goal __goal)
   self)
  (:name
   (&optional __name)
   (if __name (setq _name __name)) _name)
  (:goal
   (&rest __goal)
   (if (keywordp (car __goal))
       (send* _goal __goal)
     (progn
       (if __goal (setq _goal (car __goal)))
       _goal)))
  (:serialization-length
   ()
   (+
    ;; string _name
    4 (length _name)
    ;; move_base_msgs/MoveBaseGoal _goal
    (send _goal :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _name
       (write-long (length _name) s) (princ _name s)
     ;; move_base_msgs/MoveBaseGoal _goal
       (send _goal :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _name
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _name (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; move_base_msgs/MoveBaseGoal _goal
     (send _goal :deserialize buf ptr-) (incf ptr- (send _goal :serialization-length))
   ;;
   self)
  )

(setf (get general_service_2022::Goals_name :md5sum-) "5cba7b659cc9365a03ae2db68587ae95")
(setf (get general_service_2022::Goals_name :datatype-) "general_service_2022/Goals_name")
(setf (get general_service_2022::Goals_name :definition-)
      "string name
move_base_msgs/MoveBaseGoal goal
================================================================================
MSG: move_base_msgs/MoveBaseGoal
# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
geometry_msgs/PoseStamped target_pose

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :general_service_2022/Goals_name "5cba7b659cc9365a03ae2db68587ae95")


