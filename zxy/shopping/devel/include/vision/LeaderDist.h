// Generated by gencpp from file vision/LeaderDist.msg
// DO NOT EDIT!


#ifndef VISION_MESSAGE_LEADERDIST_H
#define VISION_MESSAGE_LEADERDIST_H

#include <ros/service_traits.h>


#include <vision/LeaderDistRequest.h>
#include <vision/LeaderDistResponse.h>


namespace vision
{

struct LeaderDist
{

typedef LeaderDistRequest Request;
typedef LeaderDistResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct LeaderDist
} // namespace vision


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::vision::LeaderDist > {
  static const char* value()
  {
    return "acff7fda0c683c872875f5c4b069f124";
  }

  static const char* value(const ::vision::LeaderDist&) { return value(); }
};

template<>
struct DataType< ::vision::LeaderDist > {
  static const char* value()
  {
    return "vision/LeaderDist";
  }

  static const char* value(const ::vision::LeaderDist&) { return value(); }
};


// service_traits::MD5Sum< ::vision::LeaderDistRequest> should match
// service_traits::MD5Sum< ::vision::LeaderDist >
template<>
struct MD5Sum< ::vision::LeaderDistRequest>
{
  static const char* value()
  {
    return MD5Sum< ::vision::LeaderDist >::value();
  }
  static const char* value(const ::vision::LeaderDistRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::vision::LeaderDistRequest> should match
// service_traits::DataType< ::vision::LeaderDist >
template<>
struct DataType< ::vision::LeaderDistRequest>
{
  static const char* value()
  {
    return DataType< ::vision::LeaderDist >::value();
  }
  static const char* value(const ::vision::LeaderDistRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::vision::LeaderDistResponse> should match
// service_traits::MD5Sum< ::vision::LeaderDist >
template<>
struct MD5Sum< ::vision::LeaderDistResponse>
{
  static const char* value()
  {
    return MD5Sum< ::vision::LeaderDist >::value();
  }
  static const char* value(const ::vision::LeaderDistResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::vision::LeaderDistResponse> should match
// service_traits::DataType< ::vision::LeaderDist >
template<>
struct DataType< ::vision::LeaderDistResponse>
{
  static const char* value()
  {
    return DataType< ::vision::LeaderDist >::value();
  }
  static const char* value(const ::vision::LeaderDistResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VISION_MESSAGE_LEADERDIST_H
